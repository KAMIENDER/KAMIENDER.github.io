---
layout:     post
title:      "springboot学习笔记(5)"
subtitle:   "复现工程中的一些记录"
date:       2020-03-18 10:00:00
author:     "Hejd"
tags:
    - 后端
    - spring
    - Java
---

## 前言

​	在复现工程的时候会遇到一些java语法及设计模式上的问题，在此记录



#### Java接口

​	只需要提供定义不需要提供实现，由子类来实现，子类可以多继承，但是必须实现该接口总的所有方法，体现了Java多态。

​	没有任何方法的[接口（标志接口）](https://blog.csdn.net/iwts_24/article/details/90146221)只是表明她的子类是一种特定类型，可以用于权限的验证

​	接口强调这些方法的属性，如输入输出的数据结构类型，限制之后可以在其他的地方用该接口来表示其子类，范围扩大了



#### Java修饰符

* static
  * 修饰变量：静态变量，无论实例的数量，只能保证有一份该变量
  * 修饰方法：不能够使用类的非静态变量，只能够从参数列表获取数据
* final
  * 修饰变量：不能被修改，必须赋初值
  * 修饰方法：不能够被重写
* synchronized
  * 对方法上锁，只能被一个线程访问
* volatile
  * 修饰的变量每次使用的时候，强制从内存进行读取，时刻同步



#### Java序列化类

​	Java的序列化机制，一个对象可以被表示为一个字节序列，包括了该对象的数据、类型、存储数据的类型。

​	该机制可以使对象写入文件后依旧可以被重新读取

​	常见的序列化类有输入输出流

要求：

* 实现java.io.Serializable接口
* 属性可序列化

项目中的runtimeexception实现了这个接口，且属性为string，为可序列化类



#### Java断言

​	断言是一种程序的调试方式，使用关键字assert来实现断言，如

```java
assert x >= 0;
```

​	如果x小于0，那么断言失败，程序终止并且返回断言信息，jvm默认不开启断言功能，一般单元测试也都不使用断言了，而是次啊用JUnit来进行测试

​	对于可回复程序，断言要改成抛出异常由上层捕获

​	更多参考[廖雪峰的博客](https://www.liaoxuefeng.com/wiki/1252599548343744/1264740093521088)



#### Java RuntimeException

​	Java对异常进行了分类，不同的异常用不同的类表示，但其更本上来说都是throwable类的子类

​	throwable又分了两个分支，一个是exception，一个是error，其中error表示较为严重的，程序无法克服恢复的问题

​	exception是可以克服以及恢复的问题，可以选择继续运行或者杀死进程，系统异常包括数组越界、空指针、类型转换等，普通异常则有断网、空间不足等，对待普通异常的部分，主要采取try catch结构或者继续将异常抛给上一层，系统异常可处理可不处理

​	在这个工程里面我们对抛出的异常进行进一步的封装，增加了errorcode属性

​	6个常见的RuntimeError：

* 空指针
* 类找不到
* 字符串转换为数字异常
* 数组越界
* 传参错误
* 数据类型转换错误



#### Java jwt

​	主要是用于实现token机制，权限验证。全称json web token，定义一种简洁的、自包含的、安全的方法用于通信双方以json对象的形式传递信息

​	实际上就是生成一个字符串，包含了签名、信息等加密后的字符

​	包含了三个部分：Header、Payload、Signature，因此生成的字符串格式为Header.Payload.Signature

> 至于为什么用token的形式，可以去参考cyc2018 session cookie以及token的讨论



###### 加密内容

* Header：主要是记录两个东西，一个是type，一个是algorithm，为key、value的形式，还有过期的时间信息
  * {
    "alg": "HS256",
    "typ": "JWT"
    }
* Payload：负载部分，记录需要传输的主要信息，主要有三种，标准中注册的声明、公共声明、私有声明（claims）
  * 标准中注册的声明，指的是jwt中提供的key
  * 公共声明，可以添加任何信息，但是需要注意的是这个可以在客户端进行解密，因此最好不要放敏感信息
  * 私有声明，提供者以及消费者都可以提供，也不建议放敏感信息，因为是对称解密的，客户端也可以解密
* Signature：签名信息，用于验证签名的可靠性，将前两部分base64加密后字符串拼合中间用.隔开，最后一部分就是该字符串用header中加密算法进行加密后的字符串，这个步骤需要一个密钥



#### 进一步讨论Java异常

[ControllerAdvice源码分析及使用](https://blog.csdn.net/GAOXINXINGgaoxinxing/article/details/91416412)

[注解机制](https://www.cnblogs.com/davidwang456/p/4199459.html)



#### Others

* Java不支持默认参数，可能会与方法重载冲突，相同输入的情况下不知道选择哪个函数